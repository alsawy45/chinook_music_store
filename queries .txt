/*Question 1: Arrange the Playlists according to number of Tracks and the Total_Spent from best to least */

SELECT
  p.Name,
  COUNT(t.name) Tracks,
  SUM(il.UnitPrice * Quantity) Total_Spent
FROM Playlist p
JOIN PlaylistTrack pt
  ON p.PlaylistId = pt.PlaylistId
JOIN Track t
  ON pt.TrackId = t.TrackId
JOIN InvoiceLine il
  ON t.TrackId = il.TrackId
GROUP BY 1
ORDER BY 3 DESC;

/*Question 2: Arrange the Artists according to number of Tracks and the Total_Sales from most sales to least */

SELECT
  a.Name Artist_Name,
  COUNT(t.name) Tracks,
  SUM(il.UnitPrice * Quantity) Total_Sales
FROM Artist a
JOIN Album al
  ON a.ArtistId = al.ArtistId
JOIN Track t
  ON al.AlbumId = t.AlbumId
JOIN InvoiceLine il
  ON t.TrackId = il.TrackId
GROUP BY 1
ORDER BY 3 DESC;

/*Question 3: Arrange the Employees according to number of Customers and the Total_Sales from most sales to least */

SELECT
  e.FirstName,
  e.LastName,
  COUNT(c.CustomerId) Customers,
  SUM(i.total) Total_Sales
FROM Employee e
JOIN Customer c
  ON e.EmployeeId = c.SupportRepId
JOIN Invoice i
  ON c.CustomerId = i.CustomerId
GROUP BY 1,
         2
ORDER BY 4 DESC;

/*Question 4: Arrange the Albums according to number of Tracks and the Total_Sales from most sales to least */

SELECT
  al.Title Album_Title,
  COUNT(t.TrackId) Tracks,
  SUM(i.total) Total_Sales
FROM Album al
JOIN Track t
  ON t.AlbumId = al.AlbumId 
JOIN InvoiceLine il
  ON il.TrackId = t.TrackId
JOIN Invoice i
  ON il.InvoiceId = i.InvoiceId
GROUP BY 1
ORDER BY 3 DESC;